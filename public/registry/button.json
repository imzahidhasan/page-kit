{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button",
  "title": "Button",
  "description": "A smooth, animated button component with customizable color, size, and duration.",
  "author": "Reche Soares",
  "type": "registry:ui",
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  },
  "files": [
    {
      "path": "button.tsx",
      "content": "\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  variant?: \"primary\" | \"secondary\" | \"outline\" | \"ghost\";\r\n  size?: \"sm\" | \"md\" | \"lg\";\r\n  className?: string;\r\n  isLoading?: boolean;\r\n  leftIcon?: React.ReactNode;\r\n  rightIcon?: React.ReactNode;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst Button = ({\r\n  variant = \"primary\",\r\n  size = \"md\",\r\n  className = \"\",\r\n  isLoading = false,\r\n  leftIcon,\r\n  rightIcon,\r\n  children,\r\n  disabled,\r\n  ...props\r\n}: ButtonProps) => {\r\n  // Base styles for all buttons\r\n  const baseStyles =\r\n    \"font-medium rounded-lg transition-all duration-200 inline-flex items-center justify-center\";\r\n\r\n  // Size variations\r\n  const sizeStyles = {\r\n    sm: \"px-3 py-1.5 text-sm\",\r\n    md: \"px-4 py-2\",\r\n    lg: \"px-6 py-3 text-lg\",\r\n  };\r\n\r\n  // Variant styles with dark/light mode support\r\n  const variantStyles = {\r\n    primary:\r\n      \"bg-zinc-900 hover:bg-zinc-800 text-white dark:bg-zinc-100 dark:hover:bg-zinc-200 dark:text-zinc-900\",\r\n    secondary:\r\n      \"bg-zinc-200 hover:bg-zinc-300 text-zinc-900 dark:bg-zinc-800 dark:hover:bg-zinc-700 dark:text-zinc-100\",\r\n    outline:\r\n      \"border-2 border-zinc-900 text-zinc-900 hover:bg-zinc-100 dark:border-zinc-100 dark:text-zinc-100 dark:hover:bg-zinc-800/30\",\r\n    ghost:\r\n      \"text-zinc-900 hover:bg-zinc-100 dark:text-zinc-100 dark:hover:bg-zinc-800/30\",\r\n  };\r\n\r\n  // Disabled state\r\n  const disabledStyles = \"opacity-50 cursor-not-allowed pointer-events-none\";\r\n\r\n  return (\r\n    <button\r\n      className={cn(\r\n        baseStyles,\r\n        sizeStyles[size],\r\n        variantStyles[variant],\r\n        (disabled || isLoading) && disabledStyles,\r\n        className\r\n      )}\r\n      disabled={disabled || isLoading}\r\n      {...props}\r\n    >\r\n      {isLoading && (\r\n        <svg\r\n          className=\"animate-spin -ml-1 mr-2 h-4 w-4\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          fill=\"none\"\r\n          viewBox=\"0 0 24 24\"\r\n        >\r\n          <circle\r\n            className=\"opacity-25\"\r\n            cx=\"12\"\r\n            cy=\"12\"\r\n            r=\"10\"\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"4\"\r\n          ></circle>\r\n          <path\r\n            className=\"opacity-75\"\r\n            fill=\"currentColor\"\r\n            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n          ></path>\r\n        </svg>\r\n      )}\r\n\r\n      {leftIcon && !isLoading && <span className=\"mr-2\">{leftIcon}</span>}\r\n      {children}\r\n      {rightIcon && <span className=\"ml-2\">{rightIcon}</span>}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n",
      "type": "registry:ui"
    }
  ]
}